// Generated by Dagger (https://google.github.io/dagger).
package chat.rocket.android.chatdetails.presentation;

import chat.rocket.android.chatroom.presentation.ChatRoomNavigator;
import chat.rocket.android.core.lifecycle.CancelStrategy;
import chat.rocket.android.server.domain.GetCurrentServerInteractor;
import chat.rocket.android.server.infrastructure.ConnectionManagerFactory;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class ChatDetailsPresenter_Factory implements Factory<ChatDetailsPresenter> {
  private final Provider<ChatDetailsView> viewProvider;

  private final Provider<ChatRoomNavigator> navigatorProvider;

  private final Provider<CancelStrategy> strategyProvider;

  private final Provider<GetCurrentServerInteractor> serverInteractorProvider;

  private final Provider<ConnectionManagerFactory> factoryProvider;

  public ChatDetailsPresenter_Factory(
      Provider<ChatDetailsView> viewProvider,
      Provider<ChatRoomNavigator> navigatorProvider,
      Provider<CancelStrategy> strategyProvider,
      Provider<GetCurrentServerInteractor> serverInteractorProvider,
      Provider<ConnectionManagerFactory> factoryProvider) {
    this.viewProvider = viewProvider;
    this.navigatorProvider = navigatorProvider;
    this.strategyProvider = strategyProvider;
    this.serverInteractorProvider = serverInteractorProvider;
    this.factoryProvider = factoryProvider;
  }

  @Override
  public ChatDetailsPresenter get() {
    return provideInstance(
        viewProvider,
        navigatorProvider,
        strategyProvider,
        serverInteractorProvider,
        factoryProvider);
  }

  public static ChatDetailsPresenter provideInstance(
      Provider<ChatDetailsView> viewProvider,
      Provider<ChatRoomNavigator> navigatorProvider,
      Provider<CancelStrategy> strategyProvider,
      Provider<GetCurrentServerInteractor> serverInteractorProvider,
      Provider<ConnectionManagerFactory> factoryProvider) {
    return new ChatDetailsPresenter(
        viewProvider.get(),
        navigatorProvider.get(),
        strategyProvider.get(),
        serverInteractorProvider.get(),
        factoryProvider.get());
  }

  public static ChatDetailsPresenter_Factory create(
      Provider<ChatDetailsView> viewProvider,
      Provider<ChatRoomNavigator> navigatorProvider,
      Provider<CancelStrategy> strategyProvider,
      Provider<GetCurrentServerInteractor> serverInteractorProvider,
      Provider<ConnectionManagerFactory> factoryProvider) {
    return new ChatDetailsPresenter_Factory(
        viewProvider,
        navigatorProvider,
        strategyProvider,
        serverInteractorProvider,
        factoryProvider);
  }

  public static ChatDetailsPresenter newChatDetailsPresenter(
      ChatDetailsView vi